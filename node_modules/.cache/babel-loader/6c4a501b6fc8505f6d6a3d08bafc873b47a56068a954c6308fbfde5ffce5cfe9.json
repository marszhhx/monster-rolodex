{"ast":null,"code":"import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\n/* Functional component method\nconst App = () => {\n\n  return ()\n}\n\n/* Class component method \n\nclass App extends Component {\n  // set initial state(data)\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // console.log(\"constructor\");\n  }\n\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLowerCase();\n    this.setState(() => {\n      return { searchField };\n    });\n  };\n\n  // render state in certain format\n  render() {\n    // console.log(\"render\");\n\n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Cats rolodex</h1>\n        <SearchBox\n          onChangeHandler={onSearchChange}\n          placeholder={\"Search Monsters\"}\n          className={\"search-box\"}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n  // get state(data) from API call\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // asynchronous\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState(() => {\n          return { monsters: users };\n        })\n      );\n  }\n}\n\n*/\n\nexport default App;","map":{"version":3,"names":["Component","CardList","SearchBox","App"],"sources":["/Users/Mars/Coding-Projects/react/monster-rolodex/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\n/* Functional component method\nconst App = () => {\n\n  return ()\n}\n\n/* Class component method \n\nclass App extends Component {\n  // set initial state(data)\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // console.log(\"constructor\");\n  }\n\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLowerCase();\n    this.setState(() => {\n      return { searchField };\n    });\n  };\n\n  // render state in certain format\n  render() {\n    // console.log(\"render\");\n\n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Cats rolodex</h1>\n        <SearchBox\n          onChangeHandler={onSearchChange}\n          placeholder={\"Search Monsters\"}\n          className={\"search-box\"}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n  // get state(data) from API call\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // asynchronous\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState(() => {\n          return { monsters: users };\n        })\n      );\n  }\n}\n\n*/\n\nexport default App;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}