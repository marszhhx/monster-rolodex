{"ast":null,"code":"var _jsxFileName = \"/Users/Mars/Coding-Projects/react/monster-rolodex/src/App.js\",\n  _s = $RefreshSig$();\n// import { Component } from \"react\";\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\n/* Functional component method */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchField, setSearchField] = useState(\"a\"); // array of 2 values, [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [stringField, setStringField] = useState();\n  useEffect(() => {\n    console.log(\"effect fired\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // asynchronous\n    .then(response => response.json()).then(users => setMonsters(users));\n  }, []);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLowerCase();\n    setSearchField(searchFieldString);\n  };\n  const filteredMonsters = monsters.filter(monster => {\n    return monster.name.toLowerCase().includes(searchField);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Cats rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onChangeHandler: onSearchChange,\n      placeholder: \"Search Monsters\",\n      className: \"search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n/* Class component method \n\nclass App extends Component {\n  // set initial state(data)\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // console.log(\"constructor\");\n  }\n\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLowerCase();\n    this.setState(() => {\n      return { searchField };\n    });\n  };\n\n  // render state in certain format\n  render() {\n    // console.log(\"render\");\n\n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Cats rolodex</h1>\n        <SearchBox\n          onChangeHandler={onSearchChange}\n          placeholder={\"Search Monsters\"}\n          className={\"search-box\"}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n  // get state(data) from API call\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // asynchronous\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState(() => {\n          return { monsters: users };\n        })\n      );\n  }\n}\n\n*/\n_s(App, \"b7QhMba2dCw/sSBziL4i+Vm45TE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","jsxDEV","_jsxDEV","App","_s","searchField","setSearchField","monsters","setMonsters","stringField","setStringField","console","log","fetch","then","response","json","users","onSearchChange","event","searchFieldString","target","value","toLowerCase","filteredMonsters","filter","monster","name","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeHandler","placeholder","_c","$RefreshReg$"],"sources":["/Users/Mars/Coding-Projects/react/monster-rolodex/src/App.js"],"sourcesContent":["// import { Component } from \"react\";\n\nimport { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\n/* Functional component method */\nconst App = () => {\n  const [searchField, setSearchField] = useState(\"a\"); // array of 2 values, [value, setValue]\n  const [monsters, setMonsters] = useState([]);\n  const [stringField, setStringField] = useState()\n\n  useEffect(() => {\n    console.log(\"effect fired\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // asynchronous\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, []);\n\n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  const filteredMonsters = monsters.filter((monster) => {\n    return monster.name.toLowerCase().includes(searchField);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Cats rolodex</h1>\n      <SearchBox\n        onChangeHandler={onSearchChange}\n        placeholder={\"Search Monsters\"}\n        className={\"search-box\"}\n      />\n      {/* <CardList monsters={filteredMonsters} /> */}\n    </div>\n  );\n};\n\n/* Class component method \n\nclass App extends Component {\n  // set initial state(data)\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // console.log(\"constructor\");\n  }\n\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLowerCase();\n    this.setState(() => {\n      return { searchField };\n    });\n  };\n\n  // render state in certain format\n  render() {\n    // console.log(\"render\");\n\n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Cats rolodex</h1>\n        <SearchBox\n          onChangeHandler={onSearchChange}\n          placeholder={\"Search Monsters\"}\n          className={\"search-box\"}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n\n  // get state(data) from API call\n  componentDidMount() {\n    // console.log(\"componentDidMount\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // asynchronous\n      .then((response) => response.json())\n      .then((users) =>\n        this.setState(() => {\n          return { monsters: users };\n        })\n      );\n  }\n}\n\n*/\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACrD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAAA,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKT,WAAW,CAACS,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;IAC1DjB,cAAc,CAACc,iBAAiB,CAAC;EACnC,CAAC;EAED,MAAMI,gBAAgB,GAAGjB,QAAQ,CAACkB,MAAM,CAAEC,OAAO,IAAK;IACpD,OAAOA,OAAO,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACvB,WAAW,CAAC;EACzD,CAAC,CAAC;EAEF,oBACEH,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MAAI2B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ChC,OAAA,CAACF,SAAS;MACRmC,eAAe,EAAEjB,cAAe;MAChCkB,WAAW,EAAE,iBAAkB;MAC/BP,SAAS,EAAE;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA9B,EAAA,CAlCMD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA4FT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}